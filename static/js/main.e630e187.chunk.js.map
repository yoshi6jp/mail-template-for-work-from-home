{"version":3,"sources":["editor/MailContentEditor.module.css","preview/Preview.module.css","Body.module.css","Provider.tsx","utils.ts","Header.tsx","editor/ToEditor.tsx","editor/TypeSelector.tsx","editor/SubjectEditor.tsx","editor/MailHeaderEditor.tsx","json_form/JsonForm.tsx","editor/TimeEditor.tsx","editor/MailContentEditor.tsx","editor/MailFooterEditor.tsx","editor/BodyEditor.tsx","editor/Editor.tsx","preview/Preview.tsx","json_form/JsonFormConfig.tsx","Body.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","to","subject","body","type","schema","uiSchema","formData","configUrl","sendUrl","reducer","state","action","payload","RootContext","createContext","dispatch","Provider","children","useReducer","value","LS_KEY_PREFIX","LS_KEYS","start_subject","end_subject","start_header","end_header","time_label","content_label","content_text","footer","start_time","end_time","config_url","schema_json_data","Header","useContext","href","encodeURIComponent","handleClick","useCallback","a","JSON","stringify","localStorage","setItem","fetch","method","headers","Navbar","dark","color","fixed","NavbarBrand","Button","onClick","className","title","tag","target","icon","faEnvelope","SavedValue","getItem","ToEditor","handleChange","ev","useEffect","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","required","defaultValue","onChange","placeholder","TypeSelector","evt","FormGroup","check","inline","Label","name","defaultChecked","SavedStartValue","SavedEndValue","SubjectEditor","useState","startSubject","setStartSubject","endSubject","setEndSubject","handleStartChange","handleEndChange","hidden","require","key","SavedStartHeader","SavedEndHeader","MailHeaderEditor","startHeader","setStartHeader","endHeader","setEndHeader","minRows","SavedSchemaJsonData","text","parse","e","console","log","JsonForm","data","setData","SavedStartTime","SavedEndTime","SavedTimeLabel","TimeEditor","startTime","setStartTime","endTime","setEndTime","timeLabel","setTimeLabel","handleStartTimeChange","handleEndTimeChange","handleSetStartTimeNow","format","Date","handleSetEndTimeNow","locale","ja","Form","faPenNib","faMinus","SavedContentLabel","SavedContentText","MailContentEditor","contentLabel","setContentLabel","contentText","setContentText","handleLabelChange","handleTextChange","handleClearText","size","outline","st","clear_btn","faTimesCircle","SavedText","MailFooterEditor","BodyEditor","header","setHeader","timeText","setTimeText","content","setContent","setFooter","formText","yaml","safeDump","Editor","Preview","readOnly","faClipboard","text_btn","SavedConfigUrlValue","JsonFormConfig","inputEl","useRef","url","setUrl","handleDrop","preventDefault","stopPropagation","file","dataTransfer","files","readAsText","json","FORM","UI","ENDPOINT","handleDragOver","current","removeItem","res","innerRef","onDrop","onDragOver","faCloudDownloadAlt","Body","Container","top","fluid","Row","Col","md","lg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.e630e187.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear_btn\":\"MailContentEditor_clear_btn__MF5nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_btn\":\"Preview_text_btn__3_ogS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Body_top__EAoNQ\"};","import React, { createContext, Dispatch, useReducer } from \"react\";\nimport { UiSchema } from \"@rjsf/core\";\nimport { JSONSchema7 } from \"json-schema\";\ninterface State {\n  to: string;\n  subject: string;\n  body: string;\n  type: \"Start\" | \"End\";\n  schema: JSONSchema7 | null;\n  uiSchema: UiSchema | null;\n  formData: object | null;\n  configUrl: string;\n  sendUrl: string;\n}\nconst initialState: State = {\n  to: \"\",\n  subject: \"\",\n  body: \"\",\n  type: \"Start\",\n  schema: null,\n  uiSchema: null,\n  formData: null,\n  configUrl: \"\",\n  sendUrl: \"\",\n};\ninterface ContextState extends State {\n  dispatch: Dispatch<Actions>;\n}\n\ninterface Action {\n  type: \"SetTo\" | \"SetSubject\" | \"SetBody\" | \"SetConfigUrl\" | \"SetSendUrl\";\n  payload: string;\n}\ninterface TypeAction {\n  type: \"SetType\";\n  payload: State[\"type\"];\n}\ninterface SchemaAction {\n  type: \"SetSchema\";\n  payload: State[\"schema\"];\n}\ninterface UiSchemaAction {\n  type: \"SetUiSchema\";\n  payload: State[\"uiSchema\"];\n}\ninterface FormDataAction {\n  type: \"SetFormData\";\n  payload: State[\"formData\"];\n}\ninterface ClearJsonSchemaAction {\n  type: \"ClearJsonSchema\";\n}\ntype Actions =\n  | Action\n  | TypeAction\n  | SchemaAction\n  | UiSchemaAction\n  | FormDataAction\n  | ClearJsonSchemaAction;\nconst reducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case \"SetTo\": {\n      return { ...state, to: action.payload };\n    }\n    case \"SetSubject\": {\n      return { ...state, subject: action.payload };\n    }\n    case \"SetBody\": {\n      return { ...state, body: action.payload };\n    }\n    case \"SetType\": {\n      return { ...state, type: action.payload };\n    }\n    case \"SetSchema\": {\n      return { ...state, schema: action.payload };\n    }\n    case \"SetUiSchema\": {\n      return { ...state, uiSchema: action.payload };\n    }\n    case \"SetFormData\": {\n      return { ...state, formData: action.payload };\n    }\n    case \"SetConfigUrl\": {\n      return { ...state, configUrl: action.payload };\n    }\n    case \"SetSendUrl\": {\n      return { ...state, sendUrl: action.payload };\n    }\n    case \"ClearJsonSchema\": {\n      return {\n        ...state,\n        schema: null,\n        uiSchema: null,\n        formData: null,\n        configUrl: \"\",\n        sendUrl: \"\",\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const RootContext = createContext<ContextState>({\n  ...initialState,\n  dispatch: () => {},\n});\nexport const Provider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <RootContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </RootContext.Provider>\n  );\n};\n","const LS_KEY_PREFIX = \"mail-template-for-work-from-home-\";\nexport const LS_KEYS = {\n  to: `${LS_KEY_PREFIX}to`,\n  start_subject: `${LS_KEY_PREFIX}start_subject`,\n  end_subject: `${LS_KEY_PREFIX}end_subject`,\n  start_header: `${LS_KEY_PREFIX}start_header`,\n  end_header: `${LS_KEY_PREFIX}end_header`,\n  time_label: `${LS_KEY_PREFIX}time_label`,\n  content_label: `${LS_KEY_PREFIX}content_label`,\n  content_text: `${LS_KEY_PREFIX}content_text`,\n  footer: `${LS_KEY_PREFIX}footer`,\n  start_time: `${LS_KEY_PREFIX}start_time`,\n  end_time: `${LS_KEY_PREFIX}end_time`,\n  config_url: `${LS_KEY_PREFIX}config_url`,\n  schema_json_data: `${LS_KEY_PREFIX}schema_json_data`,\n};\n","import React, { useContext, useCallback } from \"react\";\nimport { Navbar, NavbarBrand, Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"./Provider\";\nimport { LS_KEYS } from \"./utils\";\nexport const Header: React.FC = () => {\n  const { to, subject, body, formData, sendUrl } = useContext(RootContext);\n  const href = `https://outlook.office.com/owa/?subject=${encodeURIComponent(\n    subject\n  )}&body=${encodeURIComponent(body)}&to=${to}&path=/mail/action/compose`;\n  const handleClick = useCallback(async () => {\n    const body = JSON.stringify(formData);\n    localStorage.setItem(LS_KEYS.schema_json_data, body);\n    await fetch(sendUrl, {\n      method: \"POST\",\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n      body,\n    });\n  }, [formData, sendUrl]);\n  return (\n    <Navbar dark={true} color=\"dark\" fixed=\"top\">\n      <NavbarBrand>テレワーク用のメールテンプレート</NavbarBrand>\n      <Button\n        onClick={handleClick}\n        className=\"d-none d-sm-inline-block\"\n        title=\"Outlook on the webでメールを作成\"\n        tag=\"a\"\n        target=\"_blank\"\n        href={href}\n      >\n        <FontAwesomeIcon icon={faEnvelope} />\n      </Button>\n    </Navbar>\n  );\n};\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport { InputGroupAddon, InputGroupText, InputGroup, Input } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\n\nconst SavedValue = localStorage.getItem(LS_KEYS.to) || \"\";\nexport const ToEditor: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const value = ev.target.value || \"\";\n      dispatch({ type: \"SetTo\", payload: value });\n      localStorage.setItem(LS_KEYS.to, value);\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    dispatch({ type: \"SetTo\", payload: SavedValue });\n  }, [dispatch]);\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>宛先</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        required={true}\n        type=\"email\"\n        defaultValue={SavedValue}\n        onChange={handleChange}\n        placeholder=\"例: report@example.com\"\n      />\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { RootContext } from '../Provider';\nexport const TypeSelector: React.FC = () => {\n  const { type, dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({\n        type: 'SetType',\n        payload: evt.target.value as 'Start' | 'End',\n      });\n    },\n    [dispatch],\n  );\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>種別</InputGroupText>\n      </InputGroupAddon>\n      <div className=\"form-control\">\n        <FormGroup check inline>\n          <Label check>\n            <Input\n              value=\"Start\"\n              name=\"type\"\n              type=\"radio\"\n              onChange={handleChange}\n              defaultChecked={type === 'Start'}\n            />\n            業務開始\n          </Label>\n        </FormGroup>\n\n        <FormGroup check inline>\n          <Label check>\n            <Input\n              value=\"End\"\n              name=\"type\"\n              type=\"radio\"\n              onChange={handleChange}\n              defaultChecked={type === 'End'}\n            />\n            業務終了\n          </Label>\n        </FormGroup>\n      </div>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\nconst SavedStartValue =\n  localStorage.getItem(LS_KEYS.start_subject) || \"[テレワーク]業務開始\";\nconst SavedEndValue =\n  localStorage.getItem(LS_KEYS.end_subject) || \"[テレワーク]業務終了\";\nexport const SubjectEditor: React.FC = () => {\n  const { type, dispatch } = useContext(RootContext);\n  const [startSubject, setStartSubject] = useState(SavedStartValue);\n  const [endSubject, setEndSubject] = useState(SavedEndValue);\n  useEffect(() => {\n    const subject = type === \"End\" ? endSubject : startSubject;\n    dispatch({ type: \"SetSubject\", payload: subject });\n  }, [type, startSubject, endSubject, dispatch]);\n\n  const handleStartChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setStartSubject(value);\n      localStorage.setItem(LS_KEYS.start_subject, value);\n    },\n    [setStartSubject]\n  );\n\n  const handleEndChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setEndSubject(value);\n      localStorage.setItem(LS_KEYS.end_subject, value);\n    },\n    [setEndSubject]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>件名</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        hidden={type !== \"Start\"}\n        require={true}\n        key=\"Start\"\n        defaultValue={startSubject}\n        onChange={handleStartChange}\n        placeholder=\"業務開始時の件名を入力\"\n      />\n      <Input\n        hidden={type !== \"End\"}\n        required={true}\n        key=\"End\"\n        defaultValue={endSubject}\n        onChange={handleEndChange}\n        placeholder=\"業務終了時の件名を入力\"\n      />\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\nimport { LS_KEYS } from \"../utils\";\nimport Textarea from \"react-textarea-autosize\";\nimport { RootContext } from \"../Provider\";\nconst SavedStartHeader =\n  localStorage.getItem(LS_KEYS.start_header) ||\n  `xxさん\n\nxxです。\nテレワーク開始します。`;\nconst SavedEndHeader =\n  localStorage.getItem(LS_KEYS.end_header) ||\n  `xxさん\n\nxxです。\nテレワーク終了します。`;\nexport const MailHeaderEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const { type } = useContext(RootContext);\n  const [startHeader, setStartHeader] = useState(SavedStartHeader);\n  const [endHeader, setEndHeader] = useState(SavedEndHeader);\n  useEffect(() => {\n    switch (type) {\n      case \"Start\": {\n        onChange(startHeader);\n        break;\n      }\n      case \"End\": {\n        onChange(endHeader);\n        break;\n      }\n    }\n  }, [type, startHeader, endHeader, onChange]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.start_header, startHeader);\n  }, [startHeader]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.end_header, endHeader);\n  }, [endHeader]);\n  const handleStartChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setStartHeader(evt.target.value);\n    },\n    [setStartHeader]\n  );\n\n  const handleEndChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setEndHeader(evt.target.value);\n    },\n    [setEndHeader]\n  );\n  return (\n    <>\n      <Textarea\n        className=\"form-control\"\n        hidden={type !== \"Start\"}\n        defaultValue={startHeader}\n        onChange={handleStartChange}\n        placeholder=\"開始用の本文のヘッダー\"\n        minRows={3}\n      />\n      <Textarea\n        className=\"form-control\"\n        hidden={type !== \"End\"}\n        defaultValue={endHeader}\n        onChange={handleEndChange}\n        placeholder=\"終了用の本文のヘッダー\"\n        minRows={3}\n      />\n    </>\n  );\n};\n","import React, { useContext, useCallback, useState, useEffect } from \"react\";\nimport { IChangeEvent } from \"@rjsf/core\";\nimport { RootContext } from \"../Provider\";\nimport Form from \"@rjsf/bootstrap-4\";\nimport { LS_KEYS } from \"src/utils\";\nlet SavedSchemaJsonData: object = {};\ntry {\n  const text = localStorage.getItem(LS_KEYS.schema_json_data);\n  if (text) {\n    SavedSchemaJsonData = JSON.parse(text);\n  }\n} catch (e) {\n  console.log(e);\n}\nexport const JsonForm: React.FC = () => {\n  const { schema, uiSchema, dispatch } = useContext(RootContext);\n  const [data, setData] = useState<object>(SavedSchemaJsonData);\n  const handleChange = useCallback(\n    (evt: IChangeEvent) => {\n      const { formData } = evt;\n      // dispatch({ type: \"SetFormData\", payload: formData });\n      setData(formData);\n    },\n    // [dispatch, setData]\n    [setData]\n  );\n  useEffect(() => {\n    dispatch({ type: \"SetFormData\", payload: data });\n  }, [dispatch, data]);\n  if (schema && uiSchema) {\n    return (\n      <Form\n        schema={schema}\n        uiSchema={uiSchema}\n        formData={data}\n        onChange={handleChange}\n      >\n        <hr />\n      </Form>\n    );\n  }\n  return <></>;\n};\n","import React, { useEffect, useContext, useState, useCallback } from \"react\";\nimport {\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\nimport { format } from \"date-fns\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus, faPenNib } from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\n\nimport { ja } from \"date-fns/locale\";\n\nconst SavedStartTime = localStorage.getItem(LS_KEYS.start_time) || \"08:40\";\nconst SavedEndTime = localStorage.getItem(LS_KEYS.end_time) || \"17:30\";\nconst SavedTimeLabel = localStorage.getItem(LS_KEYS.time_label) || \"[時間]\";\nexport const TimeEditor: React.FC<{ onChange: (val: string) => void }> = ({\n  onChange,\n}) => {\n  const { type } = useContext(RootContext);\n  const [startTime, setStartTime] = useState(SavedStartTime);\n  const [endTime, setEndTime] = useState(SavedEndTime);\n  const [timeLabel, setTimeLabel] = useState(SavedTimeLabel);\n  const handleLabelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value || \"\";\n    setTimeLabel(value);\n    localStorage.setItem(LS_KEYS.time_label, value);\n  };\n\n  const handleStartTimeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStartTime(e.target.value || \"\");\n    },\n    [setStartTime]\n  );\n  const handleEndTimeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setEndTime(e.target.value || \"\");\n    },\n    [setEndTime]\n  );\n  const handleSetStartTimeNow = useCallback(() => {\n    setStartTime(format(new Date(), \"HH:mm\"));\n  }, [setStartTime]);\n\n  const handleSetEndTimeNow = useCallback(() => {\n    setEndTime(format(new Date(), \"HH:mm\"));\n  }, [setEndTime]);\n\n  useEffect(() => {\n    onChange(`${timeLabel}\n\n    ${format(new Date(), \"L/d(E)\", { locale: ja })} ${startTime} - ${endTime}`);\n  }, [timeLabel, startTime, endTime, onChange]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.start_time, startTime);\n  }, [startTime]);\n  useEffect(() => {\n    if (type === \"Start\") {\n      localStorage.setItem(LS_KEYS.end_time, endTime);\n    }\n  }, [endTime, type]);\n  return (\n    <div>\n      <Form inline>\n        <Input\n          onChange={handleLabelChange}\n          placeholder=\"時間のラベル\"\n          value={timeLabel}\n        />\n      </Form>\n      <Form inline>\n        <FormGroup className=\"w-100\">\n          <div className=\"mx-4\">\n            {format(new Date(), \"L/d(E)\", { locale: ja })}\n          </div>\n          <InputGroup>\n            <Input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n            />\n            <InputGroupAddon addonType=\"append\" hidden={type !== \"Start\"}>\n              <Button\n                title=\"現在の時刻を設定する\"\n                onClick={handleSetStartTimeNow}\n              >\n                <FontAwesomeIcon icon={faPenNib} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          <FontAwesomeIcon icon={faMinus} className=\"mx-3\" />\n          <InputGroup>\n            <Input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n            <InputGroupAddon addonType=\"append\" hidden={type !== \"End\"}>\n              <Button\n                title=\"現在の時刻を設定する\"\n                onClick={handleSetEndTimeNow}\n              >\n                <FontAwesomeIcon icon={faPenNib} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Input, Form, Button } from \"reactstrap\";\nimport { LS_KEYS } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Textarea from \"react-textarea-autosize\";\nimport st from \"./MailContentEditor.module.css\";\nconst ContentSample = `例\n- AAAの作業\n- BBBの作業\n- CCCの作業\n`;\nconst SavedContentLabel =\n  localStorage.getItem(LS_KEYS.content_label) || \"[作業内容]\";\nconst SavedContentText = localStorage.getItem(LS_KEYS.content_text) || \"\";\nexport const MailContentEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const [contentLabel, setContentLabel] = useState(SavedContentLabel);\n  const [contentText, setContentText] = useState(SavedContentText);\n  const handleLabelChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setContentLabel(value);\n      localStorage.setItem(LS_KEYS.content_label, value);\n    },\n    [setContentLabel]\n  );\n\n  const handleTextChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const value = evt.target.value || \"\";\n      setContentText(value);\n      localStorage.setItem(LS_KEYS.content_text, value);\n    },\n    [setContentText]\n  );\n  const handleClearText = useCallback(() => {\n    setContentText(\"\");\n  }, [setContentText]);\n  useEffect(() => {\n    onChange(`${contentLabel}\n\n${contentText}`);\n  }, [contentLabel, contentText, onChange]);\n  return (\n    <div>\n      <Form inline>\n        <Input onChange={handleLabelChange} value={contentLabel} />\n      </Form>\n      <div className=\"position-relative\">\n        <Textarea\n          value={contentText}\n          minRows={5}\n          className=\"form-control\"\n          placeholder={ContentSample}\n          onChange={handleTextChange}\n        />\n        <Button\n          onClick={handleClearText}\n          size=\"sm\"\n          title=\"内容を消去\"\n          color=\"white\"\n          outline\n          className={st.clear_btn}\n        >\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport Textarea from \"react-textarea-autosize\";\nimport { LS_KEYS } from \"../utils\";\nconst SavedText =\n  localStorage.getItem(LS_KEYS.footer) ||\n  `以上です。\n\n------\nこのメールは、以下のツールを利用して作成しました。\n- [テレワーク用のメールテンプレート](https://yoshi6jp.github.io/mail-template-for-work-from-home/)`;\nexport const MailFooterEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const handleChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const value = evt.target.value || \"\";\n      onChange(value);\n      localStorage.setItem(LS_KEYS.footer, value);\n    },\n    [onChange]\n  );\n  useEffect(() => {\n    onChange(SavedText);\n  }, [onChange]);\n\n  return (\n    <Textarea\n      className=\"form-control\"\n      minRows={3}\n      onChange={handleChange}\n      defaultValue={SavedText}\n      placeholder=\"本文のフッター\"\n    />\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport yaml from \"js-yaml\";\nimport { MailHeaderEditor } from \"./MailHeaderEditor\";\nimport { JsonForm } from \"../json_form/JsonForm\";\nimport { TimeEditor } from \"./TimeEditor\";\nimport { MailContentEditor } from \"./MailContentEditor\";\nimport { MailFooterEditor } from \"./MailFooterEditor\";\nimport { RootContext } from \"../Provider\";\nconst yamlStart = \"```yaml\";\nconst yamlEnd = \"```\";\nexport const BodyEditor: React.FC = () => {\n  const { dispatch, schema, formData } = useContext(RootContext);\n  const [header, setHeader] = useState(\"\");\n  const [timeText, setTimeText] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [footer, setFooter] = useState(\"\");\n  useEffect(() => {\n    let body = \"\";\n    if (schema) {\n      let formText = \"\";\n      try {\n        formText = yaml.safeDump(formData || \"\");\n      } catch (e) {\n        console.log(e);\n      }\n      body = `${header}\n\n${timeText}\n\n${yamlStart}\n${formText}\n${yamlEnd}\n\n${footer}`;\n    } else {\n      body = `${header}\n\n${timeText}    \n\n${content}\n\n${footer}`;\n    }\n    dispatch({ type: \"SetBody\", payload: body });\n  }, [header, timeText, content, footer, schema, formData, dispatch]);\n\n  return (\n    <div>\n      <div className=\"d-none d-sm-block\">\n        <p className=\"lead\">本文</p>\n        <MailHeaderEditor onChange={setHeader} />\n        <TimeEditor onChange={setTimeText} />\n      </div>\n      {schema ? <JsonForm /> : <MailContentEditor onChange={setContent} />}\n      <div className=\"d-none d-sm-block\">\n        <MailFooterEditor onChange={setFooter} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToEditor } from './ToEditor';\nimport { TypeSelector } from './TypeSelector';\nimport { SubjectEditor } from './SubjectEditor';\nimport { BodyEditor } from './BodyEditor';\n\nexport const Editor: React.FC = () => {\n  return (\n    <>\n      <div className=\"d-none d-sm-block\">\n        <ToEditor />\n        <TypeSelector />\n        <SubjectEditor />\n      </div>\n      <br />\n      <BodyEditor />\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { RootContext } from '../Provider';\nimport st from './Preview.module.css';\nexport const Preview: React.FC = () => {\n  const { to, subject, body } = useContext(RootContext);\n  return (\n    <div>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>宛先</InputGroupText>\n        </InputGroupAddon>\n        <Input readOnly={true} value={to} />\n        <InputGroupAddon addonType=\"append\">\n          <CopyToClipboard text={to}>\n            <Button title=\"宛先をクリップボードにコピー\">\n              <FontAwesomeIcon icon={faClipboard} />\n            </Button>\n          </CopyToClipboard>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>件名</InputGroupText>\n        </InputGroupAddon>\n        <Input readOnly={true} value={subject} />\n        <InputGroupAddon addonType=\"append\">\n          <CopyToClipboard text={subject}>\n            <Button title=\"件名をクリップボードにコピー\">\n              <FontAwesomeIcon icon={faClipboard} />\n            </Button>\n          </CopyToClipboard>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <p className=\"lead\">本文</p>\n      <div className=\"border position-relative p-1\">\n        <pre>\n          <code>{body}</code>\n        </pre>\n        <CopyToClipboard text={body}>\n          <Button className={st.text_btn} title=\"本文をクリップボードにコピー\">\n            <FontAwesomeIcon icon={faClipboard} />\n          </Button>\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n};\n","import React, {\n  useState,\n  useCallback,\n  useContext,\n  useRef,\n  useEffect,\n} from \"react\";\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n  Button,\n} from \"reactstrap\";\nimport { readAsText } from \"promise-file-reader\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faCloudDownloadAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\nconst SavedConfigUrlValue = localStorage.getItem(LS_KEYS.config_url) || \"\";\n\nexport const JsonFormConfig: React.FC = () => {\n  const inputEl = useRef<HTMLInputElement>(null);\n  const [url, setUrl] = useState(SavedConfigUrlValue);\n  const { dispatch } = useContext(RootContext);\n  const handleDrop = useCallback(\n    async (evt: React.DragEvent<HTMLInputElement>) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n      const file = evt.dataTransfer.files[0];\n      if (file) {\n        const text = await readAsText(file);\n        try {\n          const json = JSON.parse(text);\n          const { FORM, UI, ENDPOINT } = json;\n          if (FORM) {\n            dispatch({ type: \"SetSchema\", payload: FORM });\n          }\n          if (UI) {\n            dispatch({ type: \"SetUiSchema\", payload: UI });\n          }\n          if (ENDPOINT) {\n            dispatch({ type: \"SetSendUrl\", payload: ENDPOINT });\n          }\n        } catch (e) {\n          // format error\n        }\n      }\n    },\n    [dispatch]\n  );\n  const handleDragOver = useCallback(\n    (evt: React.DragEvent<HTMLInputElement>) => {\n      evt.preventDefault();\n      evt.stopPropagation();\n    },\n    []\n  );\n  const handleClick = useCallback(async () => {\n    const url = inputEl.current?.value;\n    if (url) {\n      setUrl(url);\n    } else {\n      localStorage.removeItem(LS_KEYS.config_url);\n      dispatch({ type: \"ClearJsonSchema\" });\n    }\n  }, [inputEl, setUrl, dispatch]);\n  useEffect(() => {\n    setUrl(SavedConfigUrlValue);\n  }, []);\n  useEffect(() => {\n    if (url) {\n      (async () => {\n        const res = await fetch(url);\n        const json = await res.json();\n        const { FORM, UI, ENDPOINT } = json;\n        console.log(ENDPOINT, json);\n        if (FORM) {\n          dispatch({ type: \"SetSchema\", payload: FORM });\n        }\n        if (UI) {\n          dispatch({ type: \"SetUiSchema\", payload: UI });\n        }\n        if (ENDPOINT) {\n          dispatch({ type: \"SetSendUrl\", payload: ENDPOINT });\n        }\n        if (FORM && ENDPOINT) {\n          dispatch({ type: \"SetConfigUrl\", payload: url });\n          localStorage.setItem(LS_KEYS.config_url, url);\n        }\n      })();\n    }\n  }, [url, dispatch]);\n  return (\n    <InputGroup className=\"mb-1\">\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>JSON Schema (experiment)</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        type=\"url\"\n        innerRef={inputEl}\n        onDrop={handleDrop}\n        onDragOver={handleDragOver}\n        placeholder=\"本文の JSON Schema の URL を設定 \"\n        defaultValue={SavedConfigUrlValue}\n      ></Input>\n      <InputGroupAddon addonType=\"append\">\n        <Button onClick={handleClick}>\n          <FontAwesomeIcon icon={faCloudDownloadAlt} />\n        </Button>\n      </InputGroupAddon>\n    </InputGroup>\n  );\n};\n","import React from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport { Editor } from \"./editor/Editor\";\nimport { Preview } from \"./preview/Preview\";\nimport { JsonFormConfig } from \"./json_form/JsonFormConfig\";\nimport st from \"./Body.module.css\";\nexport const Body: React.FC = () => {\n  return (\n    <Container className={st.top} fluid={true}>\n      <Row>\n        <Col md=\"12\">\n          <JsonFormConfig />\n        </Col>\n        <Col md=\"12\" lg=\"6\">\n          <Editor />\n        </Col>\n        <Col md=\"12\" lg=\"6\" className=\"d-none d-sm-block\">\n          <Preview />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Body } from \"./Body\";\nimport { Provider } from \"./Provider\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider>\n      <div>\n        <Header />\n        <Body />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}