{"version":3,"sources":["editor/MailContentEditor.module.css","preview/Preview.module.css","Body.module.css","Provider.tsx","Header.tsx","utils.ts","editor/ToEditor.tsx","editor/TypeSelector.tsx","editor/SubjectEditor.tsx","editor/MailHeaderEditor.tsx","editor/TimeEditor.tsx","editor/MailContentEditor.tsx","editor/MailFooterEditor.tsx","editor/BodyEditor.tsx","editor/Editor.tsx","preview/Preview.tsx","Body.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["module","exports","initialState","to","subject","body","type","reducer","state","action","payload","RootContext","createContext","dispatch","Provider","children","useReducer","value","Header","useContext","href","encodeURIComponent","Navbar","dark","color","fixed","NavbarBrand","Button","title","tag","target","icon","faEnvelope","LS_KEY_PREFIX","LS_KEYS","start_subject","end_subject","start_header","end_header","time_label","content_label","content_text","footer","start_time","end_time","SavedValue","localStorage","getItem","ToEditor","handleChange","useCallback","ev","setItem","useEffect","InputGroup","InputGroupAddon","addonType","InputGroupText","Input","required","defaultValue","onChange","placeholder","TypeSelector","evt","className","FormGroup","check","inline","Label","name","defaultChecked","SavedStartValue","SavedEndValue","SubjectEditor","useState","startSubject","setStartSubject","endSubject","setEndSubject","handleStartChange","handleEndChange","hidden","require","key","SavedStartHeader","SavedEndHeader","MailHeaderEditor","startHeader","setStartHeader","endHeader","setEndHeader","minRows","SavedStartTime","SavedEndTime","SavedTimeLabel","TimeEditor","startTime","setStartTime","endTime","setEndTime","timeLabel","setTimeLabel","handleStartTimeChange","e","handleEndTimeChange","handleSetStartTimeNow","format","Date","handleSetEndTimeNow","locale","ja","Form","onClick","faPenNib","faMinus","SavedContentLabel","SavedContentText","MailContentEditor","contentLabel","setContentLabel","contentText","setContentText","handleLabelChange","handleTextChange","handleClearText","size","outline","st","clear_btn","faTimesCircle","SavedText","MailFooterEditor","BodyEditor","header","setHeader","timeText","setTimeText","content","setContent","setFooter","Editor","Preview","readOnly","text","faClipboard","text_btn","Body","Container","top","fluid","Row","Col","md","lg","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.2a38571b.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"clear_btn\":\"MailContentEditor_clear_btn__MF5nd\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"text_btn\":\"Preview_text_btn__3_ogS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"top\":\"Body_top__EAoNQ\"};","import React, { createContext, Dispatch, useReducer } from 'react';\ninterface State {\n  to: string;\n  subject: string;\n  body: string;\n  type: 'Start' | 'End';\n}\nconst initialState: State = {\n  to: '',\n  subject: '',\n  body: '',\n  type: 'Start',\n};\ninterface ContextState extends State {\n  dispatch: Dispatch<Actions>;\n}\n\ninterface Action {\n  type: 'SetTo' | 'SetSubject' | 'SetBody';\n  payload: string;\n}\ninterface TypeAction {\n  type: 'SetType';\n  payload: State['type'];\n}\ntype Actions = Action | TypeAction;\nconst reducer = (state: State, action: Actions) => {\n  switch (action.type) {\n    case 'SetTo': {\n      return { ...state, to: action.payload };\n    }\n    case 'SetSubject': {\n      return { ...state, subject: action.payload };\n    }\n    case 'SetBody': {\n      return { ...state, body: action.payload };\n    }\n    case 'SetType': {\n      return { ...state, type: action.payload };\n    }\n    default:\n      return state;\n  }\n};\n\nexport const RootContext = createContext<ContextState>({\n  ...initialState,\n  dispatch: () => {},\n});\nexport const Provider: React.FC = ({ children }) => {\n  const [state, dispatch] = useReducer(reducer, initialState);\n  return (\n    <RootContext.Provider value={{ ...state, dispatch }}>\n      {children}\n    </RootContext.Provider>\n  );\n};\n","import React, { useContext } from \"react\";\nimport { Navbar, NavbarBrand, Button } from \"reactstrap\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faEnvelope } from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"./Provider\";\nexport const Header: React.FC = () => {\n  const { to, subject, body } = useContext(RootContext);\n  const href = `https://outlook.office.com/owa/?subject=${encodeURIComponent(\n    subject\n  )}&body=${encodeURIComponent(body)}&to=${to}&path=/mail/action/compose`;\n  return (\n    <Navbar dark={true} color=\"dark\" fixed=\"top\">\n      <NavbarBrand>テレワーク用のメールテンプレート</NavbarBrand>\n      <Button\n        title=\"[Experiment] Outlook on the webでメールを作成\"\n        tag=\"a\"\n        target=\"_blank\"\n        href={href}\n      >\n        <FontAwesomeIcon icon={faEnvelope} />\n      </Button>\n    </Navbar>\n  );\n};\n","const LS_KEY_PREFIX = 'mail-template-for-work-from-home-';\nexport const LS_KEYS = {\n  to: `${LS_KEY_PREFIX}to`,\n  start_subject: `${LS_KEY_PREFIX}start_subject`,\n  end_subject: `${LS_KEY_PREFIX}end_subject`,\n  start_header: `${LS_KEY_PREFIX}start_header`,\n  end_header: `${LS_KEY_PREFIX}end_header`,\n  time_label: `${LS_KEY_PREFIX}time_label`,\n  content_label: `${LS_KEY_PREFIX}content_label`,\n  content_text: `${LS_KEY_PREFIX}content_text`,\n  footer: `${LS_KEY_PREFIX}footer`,\n  start_time: `${LS_KEY_PREFIX}start_time`,\n  end_time: `${LS_KEY_PREFIX}end_time`,\n};\n","import React, { useCallback, useContext, useEffect } from \"react\";\nimport { InputGroupAddon, InputGroupText, InputGroup, Input } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\n\nconst SavedValue = localStorage.getItem(LS_KEYS.to) || \"\";\nexport const ToEditor: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (ev: React.ChangeEvent<HTMLInputElement>) => {\n      const value = ev.target.value || \"\";\n      dispatch({ type: \"SetTo\", payload: value });\n      localStorage.setItem(LS_KEYS.to, value);\n    },\n    [dispatch]\n  );\n  useEffect(() => {\n    dispatch({ type: \"SetTo\", payload: SavedValue });\n  }, [dispatch]);\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>宛先</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        required={true}\n        type=\"email\"\n        defaultValue={SavedValue}\n        onChange={handleChange}\n        placeholder=\"例: report@example.com\"\n      />\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext } from 'react';\nimport {\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  FormGroup,\n  Label,\n  Input,\n} from 'reactstrap';\nimport { RootContext } from '../Provider';\nexport const TypeSelector: React.FC = () => {\n  const { type, dispatch } = useContext(RootContext);\n  const handleChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      dispatch({\n        type: 'SetType',\n        payload: evt.target.value as 'Start' | 'End',\n      });\n    },\n    [dispatch],\n  );\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>種別</InputGroupText>\n      </InputGroupAddon>\n      <div className=\"form-control\">\n        <FormGroup check inline>\n          <Label check>\n            <Input\n              value=\"Start\"\n              name=\"type\"\n              type=\"radio\"\n              onChange={handleChange}\n              defaultChecked={type === 'Start'}\n            />\n            業務開始\n          </Label>\n        </FormGroup>\n\n        <FormGroup check inline>\n          <Label check>\n            <Input\n              value=\"End\"\n              name=\"type\"\n              type=\"radio\"\n              onChange={handleChange}\n              defaultChecked={type === 'End'}\n            />\n            業務終了\n          </Label>\n        </FormGroup>\n      </div>\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\nimport { InputGroup, InputGroupAddon, InputGroupText, Input } from \"reactstrap\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\nconst SavedStartValue =\n  localStorage.getItem(LS_KEYS.start_subject) || \"[テレワーク]業務開始\";\nconst SavedEndValue =\n  localStorage.getItem(LS_KEYS.end_subject) || \"[テレワーク]業務終了\";\nexport const SubjectEditor: React.FC = () => {\n  const { type, dispatch } = useContext(RootContext);\n  const [startSubject, setStartSubject] = useState(SavedStartValue);\n  const [endSubject, setEndSubject] = useState(SavedEndValue);\n  useEffect(() => {\n    const subject = type === \"End\" ? endSubject : startSubject;\n    dispatch({ type: \"SetSubject\", payload: subject });\n  }, [type, startSubject, endSubject, dispatch]);\n\n  const handleStartChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setStartSubject(value);\n      localStorage.setItem(LS_KEYS.start_subject, value);\n    },\n    [setStartSubject]\n  );\n\n  const handleEndChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setEndSubject(value);\n      localStorage.setItem(LS_KEYS.end_subject, value);\n    },\n    [setEndSubject]\n  );\n\n  return (\n    <InputGroup>\n      <InputGroupAddon addonType=\"prepend\">\n        <InputGroupText>件名</InputGroupText>\n      </InputGroupAddon>\n      <Input\n        hidden={type !== \"Start\"}\n        require={true}\n        key=\"Start\"\n        defaultValue={startSubject}\n        onChange={handleStartChange}\n        placeholder=\"業務開始時の件名を入力\"\n      />\n      <Input\n        hidden={type !== \"End\"}\n        required={true}\n        key=\"End\"\n        defaultValue={endSubject}\n        onChange={handleEndChange}\n        placeholder=\"業務終了時の件名を入力\"\n      />\n    </InputGroup>\n  );\n};\n","import React, { useCallback, useContext, useState, useEffect } from \"react\";\nimport { LS_KEYS } from \"../utils\";\nimport Textarea from \"react-textarea-autosize\";\nimport { RootContext } from \"../Provider\";\nconst SavedStartHeader =\n  localStorage.getItem(LS_KEYS.start_header) ||\n  `xxさん\n\nxxです。\nテレワーク開始します。`;\nconst SavedEndHeader =\n  localStorage.getItem(LS_KEYS.end_header) ||\n  `xxさん\n\nxxです。\nテレワーク終了します。`;\nexport const MailHeaderEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const { type } = useContext(RootContext);\n  const [startHeader, setStartHeader] = useState(SavedStartHeader);\n  const [endHeader, setEndHeader] = useState(SavedEndHeader);\n  useEffect(() => {\n    switch (type) {\n      case \"Start\": {\n        onChange(startHeader);\n        break;\n      }\n      case \"End\": {\n        onChange(endHeader);\n        break;\n      }\n    }\n  }, [type, startHeader, endHeader, onChange]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.start_header, startHeader);\n  }, [startHeader]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.end_header, endHeader);\n  }, [endHeader]);\n  const handleStartChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setStartHeader(evt.target.value);\n    },\n    [setStartHeader]\n  );\n\n  const handleEndChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      setEndHeader(evt.target.value);\n    },\n    [setEndHeader]\n  );\n  return (\n    <>\n      <Textarea\n        className=\"form-control\"\n        hidden={type !== \"Start\"}\n        defaultValue={startHeader}\n        onChange={handleStartChange}\n        placeholder=\"開始用の本文のヘッダー\"\n        minRows={3}\n      />\n      <Textarea\n        className=\"form-control\"\n        hidden={type !== \"End\"}\n        defaultValue={endHeader}\n        onChange={handleEndChange}\n        placeholder=\"終了用の本文のヘッダー\"\n        minRows={3}\n      />\n    </>\n  );\n};\n","import React, { useEffect, useContext, useState, useCallback } from \"react\";\nimport {\n  Input,\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  Form,\n  FormGroup,\n} from \"reactstrap\";\nimport { format } from \"date-fns\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faMinus, faPenNib } from \"@fortawesome/free-solid-svg-icons\";\nimport { RootContext } from \"../Provider\";\nimport { LS_KEYS } from \"../utils\";\n\nimport { ja } from \"date-fns/locale\";\n\nconst SavedStartTime = localStorage.getItem(LS_KEYS.start_time) || \"08:40\";\nconst SavedEndTime = localStorage.getItem(LS_KEYS.end_time) || \"17:30\";\nconst SavedTimeLabel = localStorage.getItem(LS_KEYS.time_label) || \"[時間]\";\nexport const TimeEditor: React.FC<{ onChange: (val: string) => void }> = ({\n  onChange,\n}) => {\n  const { type } = useContext(RootContext);\n  const [startTime, setStartTime] = useState(SavedStartTime);\n  const [endTime, setEndTime] = useState(SavedEndTime);\n  const [timeLabel, setTimeLabel] = useState(SavedTimeLabel);\n  const handleLabelChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const value = e.target.value || \"\";\n    setTimeLabel(value);\n    localStorage.setItem(LS_KEYS.time_label, value);\n  };\n\n  const handleStartTimeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setStartTime(e.target.value || \"\");\n    },\n    [setStartTime]\n  );\n  const handleEndTimeChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      setEndTime(e.target.value || \"\");\n    },\n    [setEndTime]\n  );\n  const handleSetStartTimeNow = useCallback(() => {\n    setStartTime(format(new Date(), \"HH:mm\"));\n  }, [setStartTime]);\n\n  const handleSetEndTimeNow = useCallback(() => {\n    setEndTime(format(new Date(), \"HH:mm\"));\n  }, [setEndTime]);\n\n  useEffect(() => {\n    onChange(`${timeLabel}\n\n    ${format(new Date(), \"L/d(E)\", { locale: ja })} ${startTime} - ${endTime}`);\n  }, [timeLabel, startTime, endTime, onChange]);\n  useEffect(() => {\n    localStorage.setItem(LS_KEYS.start_time, startTime);\n  }, [startTime]);\n  useEffect(() => {\n    if (type === \"Start\") {\n      localStorage.setItem(LS_KEYS.end_time, endTime);\n    }\n  }, [endTime, type]);\n  return (\n    <div>\n      <Form inline>\n        <Input\n          onChange={handleLabelChange}\n          placeholder=\"時間のラベル\"\n          value={timeLabel}\n        />\n      </Form>\n      <Form inline>\n        <FormGroup className=\"w-100\">\n          <div className=\"mx-4\">\n            {format(new Date(), \"L/d(E)\", { locale: ja })}\n          </div>\n          <InputGroup>\n            <Input\n              type=\"time\"\n              value={startTime}\n              onChange={handleStartTimeChange}\n            />\n            <InputGroupAddon addonType=\"append\" hidden={type !== \"Start\"}>\n              <Button\n                title=\"現在の時刻を設定する\"\n                onClick={handleSetStartTimeNow}\n              >\n                <FontAwesomeIcon icon={faPenNib} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n          <FontAwesomeIcon icon={faMinus} className=\"mx-3\" />\n          <InputGroup>\n            <Input type=\"time\" value={endTime} onChange={handleEndTimeChange} />\n            <InputGroupAddon addonType=\"append\" hidden={type !== \"End\"}>\n              <Button\n                title=\"現在の時刻を設定する\"\n                onClick={handleSetEndTimeNow}\n              >\n                <FontAwesomeIcon icon={faPenNib} />\n              </Button>\n            </InputGroupAddon>\n          </InputGroup>\n        </FormGroup>\n      </Form>\n    </div>\n  );\n};\n","import React, { useCallback, useState, useEffect } from \"react\";\nimport { Input, Form, Button } from \"reactstrap\";\nimport { LS_KEYS } from \"../utils\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTimesCircle } from \"@fortawesome/free-solid-svg-icons\";\nimport Textarea from \"react-textarea-autosize\";\nimport st from \"./MailContentEditor.module.css\";\nconst ContentSample = `例\n- AAAの作業\n- BBBの作業\n- CCCの作業\n`;\nconst SavedContentLabel =\n  localStorage.getItem(LS_KEYS.content_label) || \"[作業内容]\";\nconst SavedContentText = localStorage.getItem(LS_KEYS.content_text) || \"\";\nexport const MailContentEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const [contentLabel, setContentLabel] = useState(SavedContentLabel);\n  const [contentText, setContentText] = useState(SavedContentText);\n  const handleLabelChange = useCallback(\n    (evt: React.ChangeEvent<HTMLInputElement>) => {\n      const value = evt.target.value || \"\";\n      setContentLabel(value);\n      localStorage.setItem(LS_KEYS.content_label, value);\n    },\n    [setContentLabel]\n  );\n\n  const handleTextChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const value = evt.target.value || \"\";\n      setContentText(value);\n      localStorage.setItem(LS_KEYS.content_text, value);\n    },\n    [setContentText]\n  );\n  const handleClearText = useCallback(() => {\n    setContentText(\"\");\n  }, [setContentText]);\n  useEffect(() => {\n    onChange(`${contentLabel}\n\n${contentText}`);\n  }, [contentLabel, contentText, onChange]);\n  return (\n    <div>\n      <Form inline>\n        <Input onChange={handleLabelChange} value={contentLabel} />\n      </Form>\n      <div className=\"position-relative\">\n        <Textarea\n          value={contentText}\n          minRows={5}\n          className=\"form-control\"\n          placeholder={ContentSample}\n          onChange={handleTextChange}\n        />\n        <Button\n          onClick={handleClearText}\n          size=\"sm\"\n          title=\"内容を消去\"\n          color=\"white\"\n          outline\n          className={st.clear_btn}\n        >\n          <FontAwesomeIcon icon={faTimesCircle} />\n        </Button>\n      </div>\n    </div>\n  );\n};\n","import React, { useCallback, useEffect } from \"react\";\nimport Textarea from \"react-textarea-autosize\";\nimport { LS_KEYS } from \"../utils\";\nconst SavedText =\n  localStorage.getItem(LS_KEYS.footer) ||\n  `以上です。\n\n------\nこのメールは、以下のツールを利用して作成しました。\n- [テレワーク用のメールテンプレート](https://yoshi6jp.github.io/mail-template-for-work-from-home/)`;\nexport const MailFooterEditor: React.FC<{\n  onChange: (val: string) => void;\n}> = ({ onChange }) => {\n  const handleChange = useCallback(\n    (evt: React.ChangeEvent<HTMLTextAreaElement>) => {\n      const value = evt.target.value || \"\";\n      onChange(value);\n      localStorage.setItem(LS_KEYS.footer, value);\n    },\n    [onChange]\n  );\n  useEffect(() => {\n    onChange(SavedText);\n  }, [onChange]);\n\n  return (\n    <Textarea\n      className=\"form-control\"\n      minRows={3}\n      onChange={handleChange}\n      defaultValue={SavedText}\n      placeholder=\"本文のフッター\"\n    />\n  );\n};\n","import React, { useState, useContext, useEffect } from \"react\";\nimport { MailHeaderEditor } from \"./MailHeaderEditor\";\nimport { TimeEditor } from \"./TimeEditor\";\nimport { MailContentEditor } from \"./MailContentEditor\";\nimport { MailFooterEditor } from \"./MailFooterEditor\";\nimport { RootContext } from \"../Provider\";\nexport const BodyEditor: React.FC = () => {\n  const { dispatch } = useContext(RootContext);\n  const [header, setHeader] = useState(\"\");\n  const [timeText, setTimeText] = useState(\"\");\n  const [content, setContent] = useState(\"\");\n  const [footer, setFooter] = useState(\"\");\n  useEffect(() => {\n    const body = `${header}\n\n${timeText}    \n\n${content}\n\n${footer}`;\n    dispatch({ type: \"SetBody\", payload: body });\n  }, [header, timeText, content, footer, dispatch]);\n\n  return (\n    <div>\n      <div className=\"d-none d-sm-block\">\n        <p className=\"lead\">本文</p>\n        <MailHeaderEditor onChange={setHeader} />\n        <TimeEditor onChange={setTimeText} />\n      </div>\n      <MailContentEditor onChange={setContent} />\n      <div className=\"d-none d-sm-block\">\n        <MailFooterEditor onChange={setFooter} />\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport { ToEditor } from './ToEditor';\nimport { TypeSelector } from './TypeSelector';\nimport { SubjectEditor } from './SubjectEditor';\nimport { BodyEditor } from './BodyEditor';\n\nexport const Editor: React.FC = () => {\n  return (\n    <>\n      <div className=\"d-none d-sm-block\">\n        <ToEditor />\n        <TypeSelector />\n        <SubjectEditor />\n      </div>\n      <br />\n      <BodyEditor />\n    </>\n  );\n};\n","import React, { useContext } from 'react';\nimport {\n  Button,\n  InputGroup,\n  InputGroupAddon,\n  InputGroupText,\n  Input,\n} from 'reactstrap';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faClipboard } from '@fortawesome/free-solid-svg-icons';\nimport CopyToClipboard from 'react-copy-to-clipboard';\nimport { RootContext } from '../Provider';\nimport st from './Preview.module.css';\nexport const Preview: React.FC = () => {\n  const { to, subject, body } = useContext(RootContext);\n  return (\n    <div>\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>宛先</InputGroupText>\n        </InputGroupAddon>\n        <Input readOnly={true} value={to} />\n        <InputGroupAddon addonType=\"append\">\n          <CopyToClipboard text={to}>\n            <Button title=\"宛先をクリップボードにコピー\">\n              <FontAwesomeIcon icon={faClipboard} />\n            </Button>\n          </CopyToClipboard>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <InputGroup>\n        <InputGroupAddon addonType=\"prepend\">\n          <InputGroupText>件名</InputGroupText>\n        </InputGroupAddon>\n        <Input readOnly={true} value={subject} />\n        <InputGroupAddon addonType=\"append\">\n          <CopyToClipboard text={subject}>\n            <Button title=\"件名をクリップボードにコピー\">\n              <FontAwesomeIcon icon={faClipboard} />\n            </Button>\n          </CopyToClipboard>\n        </InputGroupAddon>\n      </InputGroup>\n      <br />\n      <p className=\"lead\">本文</p>\n      <div className=\"border position-relative p-1\">\n        <pre>\n          <code>{body}</code>\n        </pre>\n        <CopyToClipboard text={body}>\n          <Button className={st.text_btn} title=\"本文をクリップボードにコピー\">\n            <FontAwesomeIcon icon={faClipboard} />\n          </Button>\n        </CopyToClipboard>\n      </div>\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Container, Col, Row } from \"reactstrap\";\nimport { Editor } from \"./editor/Editor\";\nimport { Preview } from \"./preview/Preview\";\nimport st from \"./Body.module.css\";\nexport const Body: React.FC = () => {\n  return (\n    <Container className={st.top} fluid={true}>\n      <Row>\n        <Col md=\"12\" lg=\"6\">\n          <Editor />\n        </Col>\n        <Col md=\"12\" lg=\"6\" className=\"d-none d-sm-block\">\n          <Preview />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n","import React from \"react\";\nimport { Header } from \"./Header\";\nimport { Body } from \"./Body\";\nimport { Provider } from \"./Provider\";\n\nconst App: React.FC = () => {\n  return (\n    <Provider>\n      <div>\n        <Header />\n        <Body />\n      </div>\n    </Provider>\n  );\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}